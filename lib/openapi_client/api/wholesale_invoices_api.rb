=begin
#ShipCompliant Connect

#ShipCompliant REST API supporting eCommerce and Point of Sale workflows. <br /> * required fields.

The version of the OpenAPI document: v1
Contact: shipcompliantsupport@sovos.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'cgi'

module OpenapiClient
  class WholesaleInvoicesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Commits a new Wholesale Invoice to the system
    # Sample request:                 POST /api/v1/wholesaleInvoices   {         \"PersistOption\": \"OverrideExisting\",       \"Order\": {           \"BillingCustomerKey\": \"Billing123\",           \"ExternalSalesOrderKey\": \"External123\",           \"OrderNumber\": \"Order123\",           \"OrderReserved\": \"Order123\",           \"ReferenceNumber\": \"Reference123\",           \"RefundedOrderReference\": \"RefundedOrder123\",           \"Shipments\": [           {               \"DefaultWarehouse\": \"WineShipping\",               \"Freight\": 0.00,               \"ShipDate\": \"2020-11-01T00:00:00Z\",               \"ShipmentItems\": [               {                   \"BrandKey\": \"Brand123\",                   \"FobPointKey\": \"FOB\",                   \"ItemReserved\": \"ItemReserved\",                   \"ProductKey\": \"Product123\",                   \"Quantity\": 1,                   \"QuantityType\": \"CASE\",                   \"UnitPrice\": 19.99               }               ],               \"ShipmentKey\": \"1\",               \"ShipmentReserved\": \"ShipmentReserved\",               \"ShippingCustomerKey\": \"Shipping123\",               \"ShippingService\": \"FEX\"           }           ],           \"Tags\": [           {               \"Name\": \"Test Tag\"           }           ],           \"TransactionDate\": \"2020-11-01T00:00:00Z\",           \"TaxCollected\": 0.00       }   }
    # @param [Hash] opts the optional parameters
    # @option opts [ShipCompliantRestAPIDomainsWholesaleEntitiesPostInvoiceInput] :ship_compliant_rest_api_domains_wholesale_entities_post_invoice_input The new order
    # @return [ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesPostWholesaleInvoiceResponse]
    def api_v1_wholesale_invoices_post(opts = {})
      data, _status_code, _headers = api_v1_wholesale_invoices_post_with_http_info(opts)
      data
    end

    # Commits a new Wholesale Invoice to the system
    # Sample request:                 POST /api/v1/wholesaleInvoices   {         \&quot;PersistOption\&quot;: \&quot;OverrideExisting\&quot;,       \&quot;Order\&quot;: {           \&quot;BillingCustomerKey\&quot;: \&quot;Billing123\&quot;,           \&quot;ExternalSalesOrderKey\&quot;: \&quot;External123\&quot;,           \&quot;OrderNumber\&quot;: \&quot;Order123\&quot;,           \&quot;OrderReserved\&quot;: \&quot;Order123\&quot;,           \&quot;ReferenceNumber\&quot;: \&quot;Reference123\&quot;,           \&quot;RefundedOrderReference\&quot;: \&quot;RefundedOrder123\&quot;,           \&quot;Shipments\&quot;: [           {               \&quot;DefaultWarehouse\&quot;: \&quot;WineShipping\&quot;,               \&quot;Freight\&quot;: 0.00,               \&quot;ShipDate\&quot;: \&quot;2020-11-01T00:00:00Z\&quot;,               \&quot;ShipmentItems\&quot;: [               {                   \&quot;BrandKey\&quot;: \&quot;Brand123\&quot;,                   \&quot;FobPointKey\&quot;: \&quot;FOB\&quot;,                   \&quot;ItemReserved\&quot;: \&quot;ItemReserved\&quot;,                   \&quot;ProductKey\&quot;: \&quot;Product123\&quot;,                   \&quot;Quantity\&quot;: 1,                   \&quot;QuantityType\&quot;: \&quot;CASE\&quot;,                   \&quot;UnitPrice\&quot;: 19.99               }               ],               \&quot;ShipmentKey\&quot;: \&quot;1\&quot;,               \&quot;ShipmentReserved\&quot;: \&quot;ShipmentReserved\&quot;,               \&quot;ShippingCustomerKey\&quot;: \&quot;Shipping123\&quot;,               \&quot;ShippingService\&quot;: \&quot;FEX\&quot;           }           ],           \&quot;Tags\&quot;: [           {               \&quot;Name\&quot;: \&quot;Test Tag\&quot;           }           ],           \&quot;TransactionDate\&quot;: \&quot;2020-11-01T00:00:00Z\&quot;,           \&quot;TaxCollected\&quot;: 0.00       }   }
    # @param [Hash] opts the optional parameters
    # @option opts [ShipCompliantRestAPIDomainsWholesaleEntitiesPostInvoiceInput] :ship_compliant_rest_api_domains_wholesale_entities_post_invoice_input The new order
    # @return [Array<(ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesPostWholesaleInvoiceResponse, Integer, Hash)>] ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesPostWholesaleInvoiceResponse data, response status code and response headers
    def api_v1_wholesale_invoices_post_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WholesaleInvoicesApi.api_v1_wholesale_invoices_post ...'
      end
      # resource path
      local_var_path = '/api/v1/wholesaleInvoices'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'ship_compliant_rest_api_domains_wholesale_entities_post_invoice_input'])

      # return_type
      return_type = opts[:debug_return_type] || 'ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesPostWholesaleInvoiceResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Basic']

      new_options = opts.merge(
        :operation => :"WholesaleInvoicesApi.api_v1_wholesale_invoices_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WholesaleInvoicesApi#api_v1_wholesale_invoices_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
