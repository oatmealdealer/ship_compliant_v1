=begin
#ShipCompliant Connect

#ShipCompliant REST API supporting eCommerce and Point of Sale workflows. <br /> * required fields.

The version of the OpenAPI document: v1
Contact: shipcompliantsupport@sovos.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'cgi'

module OpenapiClient
  class AddressesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Validates the provided address
    # Sample request:                    POST /api/v1/addresses/validate      {          \"Address\": {              \"City\": \"Boulder\",              \"Company\": \"Sovos\",              \"Country\": \"US\",              \"County\": \"Boulder\",              \"DateOfBirth\": \"1970-01-01T00:00:00Z\",              \"Email\": \"example@sovos.com\",              \"Fax\": \"555-555-5555\",              \"FirstName\": \"Test First Name\",              \"LastName\": \"Test Last Name\",              \"Phone\": \"555-555-5555\",              \"State\": \"CO\",              \"Street1\": \"2465 Central Ave\",              \"Street2\": \"Ste 110\",              \"Zip1\": \"80301\",              \"Zip2\": \"5728\"           }      }
    # @param [Hash] opts the optional parameters
    # @option opts [ShipCompliantRestAPIDomainsAddressesEntitiesAddressBase] :ship_compliant_rest_api_domains_addresses_entities_address_base The request body with the address to be validated
    # @return [ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesValidateAddressResponse]
    def api_v1_addresses_validate_post(opts = {})
      data, _status_code, _headers = api_v1_addresses_validate_post_with_http_info(opts)
      data
    end

    # Validates the provided address
    # Sample request:                    POST /api/v1/addresses/validate      {          \&quot;Address\&quot;: {              \&quot;City\&quot;: \&quot;Boulder\&quot;,              \&quot;Company\&quot;: \&quot;Sovos\&quot;,              \&quot;Country\&quot;: \&quot;US\&quot;,              \&quot;County\&quot;: \&quot;Boulder\&quot;,              \&quot;DateOfBirth\&quot;: \&quot;1970-01-01T00:00:00Z\&quot;,              \&quot;Email\&quot;: \&quot;example@sovos.com\&quot;,              \&quot;Fax\&quot;: \&quot;555-555-5555\&quot;,              \&quot;FirstName\&quot;: \&quot;Test First Name\&quot;,              \&quot;LastName\&quot;: \&quot;Test Last Name\&quot;,              \&quot;Phone\&quot;: \&quot;555-555-5555\&quot;,              \&quot;State\&quot;: \&quot;CO\&quot;,              \&quot;Street1\&quot;: \&quot;2465 Central Ave\&quot;,              \&quot;Street2\&quot;: \&quot;Ste 110\&quot;,              \&quot;Zip1\&quot;: \&quot;80301\&quot;,              \&quot;Zip2\&quot;: \&quot;5728\&quot;           }      }
    # @param [Hash] opts the optional parameters
    # @option opts [ShipCompliantRestAPIDomainsAddressesEntitiesAddressBase] :ship_compliant_rest_api_domains_addresses_entities_address_base The request body with the address to be validated
    # @return [Array<(ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesValidateAddressResponse, Integer, Hash)>] ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesValidateAddressResponse data, response status code and response headers
    def api_v1_addresses_validate_post_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AddressesApi.api_v1_addresses_validate_post ...'
      end
      # resource path
      local_var_path = '/api/v1/addresses/validate'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'ship_compliant_rest_api_domains_addresses_entities_address_base'])

      # return_type
      return_type = opts[:debug_return_type] || 'ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesValidateAddressResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Basic']

      new_options = opts.merge(
        :operation => :"AddressesApi.api_v1_addresses_validate_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AddressesApi#api_v1_addresses_validate_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
