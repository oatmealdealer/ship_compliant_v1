=begin
#ShipCompliant Connect

#ShipCompliant REST API supporting eCommerce and Point of Sale workflows. <br /> * required fields.

The version of the OpenAPI document: v1
Contact: shipcompliantsupport@sovos.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ProductsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProductsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ProductsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProductsApi' do
    it 'should create an instance of ProductsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ProductsApi)
    end
  end

  # unit tests for api_v1_products_combos_post
  # Adds a new Combo
  # Sample request:                    POST /api/v1/products/combos      {          \&quot;brandKey\&quot;: \&quot;BRAND123\&quot;,          \&quot;productComboKey\&quot;: \&quot;COMBO123\&quot;,          \&quot;description\&quot;: \&quot;Example Combo\&quot;,          \&quot;itemsPerCase\&quot;: 2,          \&quot;wholesaleCasePrice\&quot;: 10.50,          \&quot;totalWeight\&quot;: 20.00,          \&quot;nabca\&quot;: \&quot;string\&quot;,          \&quot;scc\&quot;: \&quot;string\&quot;,          \&quot;unimerc\&quot;: \&quot;string\&quot;,          \&quot;upc\&quot;: \&quot;string\&quot;,          \&quot;gtin\&quot;: \&quot;string\&quot;,          \&quot;components\&quot;: [          {              \&quot;productKey\&quot;: \&quot;PROD123\&quot;,              \&quot;brandKey\&quot;: \&quot;BRAND123\&quot;,              \&quot;quantity\&quot;: 3,          }          ],          \&quot;distributionType\&quot;: \&quot;Direct\&quot;     }
  # @param [Hash] opts the optional parameters
  # @option opts [ShipCompliantRestAPIDomainsProductEntitiesComboInput] :ship_compliant_rest_api_domains_product_entities_combo_input The new Combo data
  # @return [ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesPostProductResponse]
  describe 'api_v1_products_combos_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_v1_products_kits_post
  # Adds a new Kit
  # Sample request:                    POST /api/v1/products/kits      {          \&quot;type\&quot;: \&quot;Prebuilt\&quot;,          \&quot;brandKey\&quot;: \&quot;BRAND123\&quot;,          \&quot;productKey\&quot;: \&quot;KIT123\&quot;,          \&quot;description\&quot;: \&quot;Example Kit\&quot;,          \&quot;totalWeight\&quot;: 10.95,          \&quot;components\&quot;: [            {              \&quot;productKey\&quot;: \&quot;PROD123\&quot;,              \&quot;brandKey\&quot;: \&quot;BRAND123\&quot;,              \&quot;quantity\&quot;: 2            }          ],          \&quot;distributionType\&quot;: \&quot;Direct\&quot;      }
  # @param [Hash] opts the optional parameters
  # @option opts [ShipCompliantRestAPIDomainsProductEntitiesKitInput] :ship_compliant_rest_api_domains_product_entities_kit_input The new Kit data
  # @return [ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesPostProductResponse]
  describe 'api_v1_products_kits_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_v1_products_post
  # Adds a new product
  # Sample request:                    POST /api/v1/products      {          \&quot;Age\&quot;: 2010,          \&quot;BottleSizeML\&quot;: 700,          \&quot;BrandKey\&quot;: \&quot;BRAND123\&quot;,          \&quot;DefaultCase\&quot;: \&quot;12\&quot;,          \&quot;DefaultRetailUnitPrice\&quot;: 10.00,          \&quot;DefaultWholesaleCasePrice\&quot;: 100.00,          \&quot;Description\&quot;: \&quot;Example Product\&quot;,          \&quot;Flavor\&quot;: \&quot;Merlot\&quot;,          \&quot;Style\&quot;: \&quot;Merlot\&quot;,          \&quot;GTIN\&quot;: \&quot;012345678905\&quot;,          \&quot;Label\&quot;: \&quot;Example Label\&quot;,          \&quot;NABCA\&quot;: \&quot;01234567891\&quot;,          \&quot;PercentAlcohol\&quot;: 6.8,          \&quot;ProductDistribution\&quot;: \&quot;Both\&quot;,          \&quot;ProductKey\&quot;: \&quot;EP\&quot;,          \&quot;ProductType\&quot;: \&quot;Wine\&quot;,          \&quot;SCC\&quot;: \&quot;10012345678902\&quot;,          \&quot;UNIMERC\&quot;: \&quot;012345\&quot;,          \&quot;UnitPrice\&quot;: 10.00,          \&quot;UPC\&quot;: \&quot;012345678905\&quot;,          \&quot;Varietal\&quot;: \&quot;Merlot\&quot;,          \&quot;Vintage\&quot;: 2010,          \&quot;VolumeAmount\&quot;: 700.00,          \&quot;VolumeUnit\&quot;: \&quot;Milliliter\&quot;,          \&quot;SubBrand\&quot;: \&quot;Example Sub Brand\&quot;,          \&quot;ContainerType\&quot;: \&quot;Bottle\&quot;,          \&quot;ContainersPerSellingUnit\&quot;: 1,          \&quot;ShippingWeightInLbs\&quot;: 1.2      }
  # @param [Hash] opts the optional parameters
  # @option opts [ShipCompliantRestAPIDomainsProductEntitiesPostProductInput] :ship_compliant_rest_api_domains_product_entities_post_product_input The new Product
  # @return [ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesPostProductResponse]
  describe 'api_v1_products_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_v1_products_product_key_delete
  # Voids a Product by Product Key and Brand Key (optional)
  # Sample request:                 DELETE /api/v1/products/PROD123    If more than one brand contains the same product key:                    DELETE /api/v1/products/PROD123?brandKey&#x3D;BRAND123
  # @param product_key The product number or sku
  # @param [Hash] opts the optional parameters
  # @option opts [String] :brand_key The brand key
  # @return [ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesDeleteProductResponse]
  describe 'api_v1_products_product_key_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_v1_products_product_key_get
  # Retrieves a specific Product by Product Key and Brand Key (optional)
  # Sample request:                    GET /api/v1/products/PROD123                 If more than one brand contains the same product key:        GET /api/v1/products/PROD123?brandKey&#x3D;BRAND123
  # @param product_key The product number
  # @param [Hash] opts the optional parameters
  # @option opts [String] :brand_key The brand key
  # @return [ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesGetProductSuccessResponse]
  describe 'api_v1_products_product_key_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_v1_products_product_key_put
  # Updates an existing product
  #  Sample request:         PUT /api/v1/products/PROD123       {     \&quot;Age\&quot;: 2010,        \&quot;BottleSizeML\&quot;: 700,        \&quot;BrandKey\&quot;: \&quot;BRAND123\&quot;,        \&quot;DefaultCase\&quot;: \&quot;12\&quot;,        \&quot;DefaultRetailUnitPrice\&quot;: 10.00,        \&quot;DefaultWholesaleCasePrice\&quot;: 100.00,        \&quot;Description\&quot;: \&quot;Example Product\&quot;,        \&quot;Flavor\&quot;: \&quot;Merlot\&quot;,        \&quot;Style\&quot;: \&quot;Merlot\&quot;,        \&quot;GTIN\&quot;: \&quot;012345678905\&quot;,        \&quot;Label\&quot;: \&quot;Example Label\&quot;,        \&quot;NABCA\&quot;: \&quot;01234567891\&quot;,        \&quot;PercentAlcohol\&quot;: 6.8,        \&quot;ProductDistribution\&quot;: \&quot;Both\&quot;,        \&quot;ProductType\&quot;: \&quot;Wine\&quot;,        \&quot;SCC\&quot;: \&quot;10012345678902\&quot;,        \&quot;UNIMERC\&quot;: \&quot;012345\&quot;,        \&quot;UnitPrice\&quot;: 10.00,        \&quot;UPC\&quot;: \&quot;012345678905\&quot;,        \&quot;Varietal\&quot;: \&quot;Merlot\&quot;,        \&quot;Vintage\&quot;: 2010,        \&quot;VolumeAmount\&quot;: 700.00,        \&quot;VolumeUnit\&quot;: \&quot;Milliliter\&quot;,        \&quot;SubBrand\&quot;: \&quot;Example Sub Brand\&quot;,        \&quot;ContainerType\&quot;: \&quot;Bottle\&quot;,        \&quot;ContainersPerSellingUnit\&quot;: 1,        \&quot;ShippingWeightInLbs\&quot;: 1.2       }
  # @param product_key The Product key
  # @param [Hash] opts the optional parameters
  # @option opts [String] :brand_key The Brand Key (optional)
  # @option opts [ShipCompliantRestAPIDomainsProductEntitiesProductInput] :ship_compliant_rest_api_domains_product_entities_product_input The new Product data
  # @return [ShipCompliantRestAPIMiddlewaresSwaggerResponseTypesPutProductResponse]
  describe 'api_v1_products_product_key_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
